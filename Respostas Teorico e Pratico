##################
##Teste teórico

Qual o objetivo do comando cache​ ​em Spark?
R: Armazenar o RDD e evitar que ele seja processado novamente quando houver uma nova transformação ou ação no mesmo.

O mesmo código implementado em Spark é normalmente mais rápido que a implementação equivalente em
MapReduce. Por quê?
R: O processamento do Spark é feito em memória usando as estruturas RDD. Já o MapReduce processa os dados direto no disco rígido.

Qual é a função do SparkContext​?
R: Cria uma sessão da aplicação no Cluster.

Explique com suas palavras o que é Resilient​ ​Distributed​ ​Datasets​ (RDD).
R: O RDD é uma forma de estrutura de dados que o Spark utiliza para processamento.

GroupByKey​ ​é menos eficiente que reduceByKey​ ​em grandes dataset. Por quê?
R: O groupByKey envia uma grande quantidade de dados para os workers de redução.
O reduceByKey combina os dados em cada partição, apenas uma saída para uma chave em cada partição pode ser enviada pela rede.

Explique o que o código Scala abaixo faz.

val textFile = sc.textFile("hdfs://...")
val counts = textFile.flatMap(line => line.split(" "))
.map(word => (word, 1))
.reduceByKey(_ + _)
counts.saveAsTextFile("hdfs://...")

R: O código acima carrega arquivo de texto na variável textFile (RDD).
Transforma o textFile separando as palavras por linha.
Conta cada palavra que foi separada.
Salva o resultado em um arquivo de texto.

##################
##Teste prático

1. Número de hosts únicos.
R: 137978

2. O total de erros 404.
R: 20901

3. Os 5 URLs que mais causaram erro 404.
R:
/pub/winvn/readme.txt	2004
/pub/winvn/release.txt	1732
/shuttle/missions/STS-69/mission-STS-69.html	683
/shuttle/missions/sts-68/ksc-upclose.gif	428
/history/apollo/a-001/a-001-patch-small.gif	384

4. Quantidade de erros 404 por dia.
R:
1995-07-01	316
1995-07-02	291
1995-07-03	474
1995-07-04	359
1995-07-05	497
1995-07-06	640
1995-07-07	570
1995-07-08	302
1995-07-09	348
1995-07-10	398
1995-07-11	471
1995-07-12	471
1995-07-13	532
1995-07-14	413
1995-07-15	254
1995-07-16	257
1995-07-17	406
1995-07-18	465
1995-07-19	639
1995-07-20	428
1995-07-21	334
1995-07-22	192
1995-07-23	233
1995-07-24	328
1995-07-25	461
1995-07-26	336
1995-07-27	336
1995-07-28	94
1995-08-01	243
1995-08-03	304
1995-08-04	346
1995-08-05	236
1995-08-06	373
1995-08-07	537
1995-08-08	391
1995-08-09	279
1995-08-10	315
1995-08-11	263
1995-08-12	196
1995-08-13	216
1995-08-14	287
1995-08-15	327
1995-08-16	259
1995-08-17	271
1995-08-18	256
1995-08-19	209
1995-08-20	312
1995-08-21	305
1995-08-22	288
1995-08-23	345
1995-08-24	420
1995-08-25	415
1995-08-26	366
1995-08-27	370
1995-08-28	410
1995-08-29	420
1995-08-30	571
1995-08-31	526

5. O total de bytes retornados.
R: 65524314915
